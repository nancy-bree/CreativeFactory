@model PagedList.IPagedList<CreativeFactory.Entities.Item>
@using PagedList.Mvc
@{int i = 1;}
<div id="sortable" data-url="@Url.Action("GetNewItemsOrder", "Item")" 
                    data-ownerid="@Model.First().Article.UserId" 
                    data-hasvotedurl="@Url.Action("HasVoted", "Rating")" 
                    data-currentuserid="@WebSecurity.CurrentUserId"
                    data-votelogic="@Url.Action("AddRemoveVote", "Rating")">
@foreach (var item in Model)
{
        <div class="row" id="@item.Id">
            <div class="thumbnail col-md-6">
                <h4>@i. @Html.ActionLink(item.Title, "Details", "Item", new { id = item.Id}, null)</h4>
                <small>@item.CreatedDate</small>
                @if (item.Article.UserId == WebSecurity.CurrentUserId)
                {
                    <div>
                        @Html.ActionLink(Resources.Edit, "Edit", "Item", new {id = item.Id}, new {@class = "btn btn-xs btn-primary", role = "button"})
                        @Html.ActionLink(Resources.Delete, "Delete", "Item", null, new {@class = "deleteBtn btn btn-xs btn-primary", role = "button"})
                    </div>
                }
                <div class="vote-span"><!-- voting-->
                    <div class="vote" data-action="vote" title="">
                        <span class="glyphicon glyphicon-heart-empty"/>
                    </div><!--vote up-->
                    <div class="vote-score" data-score="@item.Votes.Count">@item.Votes.Count</div>
                </div>
            </div>
        </div>
    i++;
}
</div>

@Html.PagedListPager(Model
                    , page => Url.Action("Details", "Article", new RouteValueDictionary {{"id", ViewBag.ArticleId}, {"page", page }})
                    , PagedListRenderOptions.PageNumbersOnly)

<script src="@Url.Content("~/Scripts/jquery-ui-1.10.3.min.js")"></script>
<script src="@Url.Content("~/Scripts/coffee/reorder.coffee")"></script>

<script>
    $(function() {
        var ownerId = $("#sortable").data("ownerid");
        var currentUserId = $("#sortable").data("currentuserid");
        $(".row").each(function () {
            var self = $(this);
            var span = self.find(".vote-span").find("span");
            if (ownerId == currentUserId || currentUserId == -1) {
                span.hide(); //hide heart
            }
            else {
                    $.ajax({
                        type: "POST",
                        url: $("#sortable").data("hasvotedurl"),
                        data: { userId: currentUserId, itemId: self.attr("id") },
                        success: function (data) {
                            if (data.result) { //show empty heart
                                span.removeClass("glyphicon-heart-empty");
                                span.addClass("glyphicon-heart");
                            }
                        }
                    });
                }
        });
    });

    $(function() {
        $.ajaxSetup({
            url: $("#sortable").data("votelogic"),
            type: 'POST',
            cache: 'false'
        });

        $('.vote').click(function () {
            var self = $(this);
            var span = self.find("span");
            var currentUserId = $("#sortable").data("currentuserid");
            var parent = self.parent().parent().parent();
            var itemid = parent.attr('id');
            var score = parent.find('.vote-score').data("score");
            if (span.hasClass("glyphicon-heart")) { // if already voted
                $.ajax({
                    data: { userId: currentUserId, itemId: itemid, action: "remove" },
                    success: function() {
                        parent.find('.vote-score').html(--score).data('score', score);
                        span.removeClass("glyphicon-heart");
                        span.addClass("glyphicon-heart-empty");
                    }
                });
            }
            else
                {
                    $.ajax({
                        data: { userId: currentUserId, itemId: itemid, action: "add" },
                        success: function() {
                            parent.find('.vote-score').html(++score).data('score', +score);
                            span.removeClass("glyphicon-heart-empty");
                            span.addClass("glyphicon-heart");
                        }
                    });
                }
        });
    });
</script>

<script src="@Url.Content("~/Scripts/coffee/delete-record.js")"></script>


<div id="dialog-confirm">@Resources.DeleteThis</div>