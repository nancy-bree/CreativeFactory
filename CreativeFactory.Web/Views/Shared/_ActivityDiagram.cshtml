<script src="/Scripts/raphael.js"></script>
<script src="/Scripts/g.raphael.js"></script>
<script src="/Scripts/g.line.js"></script>
<script>
    window.onload = function () {
        var r = Raphael("holder"),
            txtattr = { font: "12px sans-serif" };

        var x = [], y = [], y2 = [], y3 = [];
        datesArr = [], countArr = [];

        var zz = $.ajax({
            url: '@Url.Action("GetStats", "Item")',
            type: 'post',
            dataType: 'json',
            async: false,
            success: function (data) {
                datesArr = data.dates;
                countArr = data.count;
            }
        });


        for (var i = 0; i < 1e5; i++) {
            x[i] = i * 10;
            y[i] = (y[i - 1] || 0) + (Math.random() * 7) - 3;
        }

        if ((datesArr.length > 0) && (countArr.length > 0)) {
            var lines = r.linechart(10, 60, 300, 220, datesArr, countArr, { nostroke: false, axis: "0 0 1 1", symbol: "circle", smooth: true, axisxstep: 1, axisystep: 1 }).hoverColumn(function () {
                this.tags = r.set();

                for (var i = 0, ii = this.y.length; i < ii; i++) {
                    this.tags.push(r.tag(this.x, this.y[i], this.values[i], 160, 5).insertBefore(this).attr([{ fill: "#fff" }, { fill: this.symbols[i].attr("fill") }]));
                }
            }, function () {
                this.tags && this.tags.remove();
            });

            $.each(lines.axis[0].text.items, function (i, label) {
                label.attr({ 'fill': '#FFB35Be' });
            });

            $.each(lines.axis[1].text.items, function (i, label) {
                label.attr({ 'fill': '#FFB35B' });
            });
        } else {
            var t = r.text(195, 110, "No activity statistics available.");
        }

        //for (var i = 0; i < lines.axis[1].text.items.length; i++) {
        //    r.path(['M', 15, lines.axis[1].text.items[i].attrs.y, 'H', 300, + 15]).attr({ stroke: '#EEE' }).toBack();
        //}

        //lines.symbols.attr({ r: 6 });


        // lines.lines[0].animate({"stroke-width": 6}, 1000);
        // lines.symbols[0].attr({stroke: "#fff"});
        // lines.symbols[0][1].animate({fill: "#f00"}, 1000);
    };
</script>
<div class="page-header center">
    <h1>@Resources.ActivityDiagram</h1>
</div>
<div id="holder"></div>

@*<script src="/Scripts/raphael.js"></script>
<script src="/Scripts/g.raphael.js"></script>
<script src="/Scripts/g.line.js"></script>
<script>
    window.onload = function() {
        r = Raphael("holder"),
            txtattr = { font: "12px sans-serif" };

        var x = [], y = [], y2 = [], y3 = [],
            months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            values = [],
            now = 10,
            month = r.text(175, 27, months[now]).attr({ fill: "#000", stroke: "none", "font": '100 18px "Helvetica Neue", Helvetica, "Arial Unicode MS", Arial, sans-serif' }),
            rightc = r.circle(350, 27, 10).attr({ fill: "#fff", stroke: "none" }),
            right = r.path("M246,22l10,5 -10,5z").attr({ fill: "#000" }),
            leftc = r.circle(100, 27, 10).attr({ fill: "#fff", stroke: "none" }),
            left = r.path("M96,22l-10,5 10,5z").attr({ fill: "#000" });
        
    var next = function () {
        now++;
        stats();
    },
    prev = function () {
        now--;
        stats();
    };
    rightc.click(next);
    right.click(next);
    leftc.click(prev);
    left.click(prev);
        
    var stats = function () {
        r.rect(10, 60, 300, 240).attr({fill: "#fff", stroke: "none"});
        datesArr = [], countArr = [];
        if (now == 12) {
            now = 0;
        }
        if (now == -1) {
            now = 11;
        }
        month.attr({ text: months[now] });

        var zz = $.ajax({
            url: '@Url.Action("GetStats", "Item")',
                type: 'post',
                dataType: 'json',
                async: false,
                data: {monthName: months[now]},
                success: function (data) {
                    datesArr = data.dates;
                    countArr = data.count;
                }
            });


            for (var i = 0; i < 1e5; i++) {
                x[i] = i * 10;
                y[i] = (y[i - 1] || 0) + (Math.random() * 7) - 3;
            }

            if ((datesArr.length > 0) && (countArr.length > 0)) {
                var lines = r.linechart(10, 60, 300, 220, datesArr, countArr, { nostroke: false, axis: "0 0 1 1", symbol: "circle", smooth: true, axisxstep: 1, axisystep: 1 }).hoverColumn(function () {
                    this.tags = r.set();

                    for (var i = 0, ii = this.y.length; i < ii; i++) {
                        this.tags.push(r.tag(this.x, this.y[i], this.values[i], 160, 5).insertBefore(this).attr([{ fill: "#fff" }, { fill: this.symbols[i].attr("fill") }]));
                    }
                }, function () {
                    this.tags && this.tags.remove();
                });

                $.each(lines.axis[0].text.items, function (i, label) {
                    label.attr({ 'fill': '#D6D6D6' });
                });

                $.each(lines.axis[1].text.items, function (i, label) {
                    label.attr({ 'fill': '#D6D6D6' });
                });
            } else {
                var t = r.text(195, 110, "No activity statistics available.");
            }
        };
        };
</script>
<div class="page-header center">
    <h1>@Resources.ActivityDiagram</h1>
</div>
<div id="holder"></div>*@