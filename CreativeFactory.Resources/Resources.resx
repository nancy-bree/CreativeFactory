<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accost" xml:space="preserve">
    <value>Hello, </value>
  </data>
  <data name="AddArticleNav" xml:space="preserve">
    <value>Add Creative</value>
  </data>
  <data name="AddItemNav" xml:space="preserve">
    <value>Add Item</value>
  </data>
  <data name="ArticlesNav" xml:space="preserve">
    <value>Creatives</value>
  </data>
  <data name="BodyFieldCannotBeEmpty" xml:space="preserve">
    <value>Body of item is required.</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="CurrentPasswordFieldCannotBeEmpty" xml:space="preserve">
    <value>Current password field cannot be empty.</value>
  </data>
  <data name="Dark" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DescriptionIsTooLong" xml:space="preserve">
    <value>Description is too long.</value>
  </data>
  <data name="DontHaveAnAccountMsg" xml:space="preserve">
    <value> if you don't have an account.</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailFieldCannotBeEmpty" xml:space="preserve">
    <value>Email is required.</value>
  </data>
  <data name="EmailIsTooLong" xml:space="preserve">
    <value>Email is too long.</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Invalid Email Address.</value>
  </data>
  <data name="Light" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LogInLink" xml:space="preserve">
    <value>log in link</value>
  </data>
  <data name="Logoff" xml:space="preserve">
    <value>Log off</value>
  </data>
  <data name="MyArticles" xml:space="preserve">
    <value>My Creatives</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="NewPasswordFieldCannotBeEmpty" xml:space="preserve">
    <value>New password field cannot be empty.</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordDontMatch" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
  <data name="PasswordFieldCannotBeEmpty" xml:space="preserve">
    <value>Password is required.</value>
  </data>
  <data name="PasswordIsTooShort" xml:space="preserve">
    <value>Password is too short.</value>
  </data>
  <data name="RegCompleted" xml:space="preserve">
    <value>Registration Completed</value>
  </data>
  <data name="RegCompletedMsg" xml:space="preserve">
    <value>You have completed the registration process. You can now log in to the system by clicking on the </value>
  </data>
  <data name="RegError" xml:space="preserve">
    <value>Registration Error</value>
  </data>
  <data name="RegErrorMsg" xml:space="preserve">
    <value>There was an error confirming your email. Please try again.</value>
  </data>
  <data name="RegFinish" xml:space="preserve">
    <value>To complete the registration process click on this link</value>
  </data>
  <data name="RegFinishTitle" xml:space="preserve">
    <value>Complete Registration Process</value>
  </data>
  <data name="RegInstrMsg" xml:space="preserve">
    <value>To complete the registration process look for an email in your inbox that provides further instructions.</value>
  </data>
  <data name="RegInstructions" xml:space="preserve">
    <value>Registration Instructions</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="TagNameFieldCannotBeEmpty" xml:space="preserve">
    <value>Tag name is required.</value>
  </data>
  <data name="TagNameIsTooLong" xml:space="preserve">
    <value>Tag name is too long.</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TitleIsTooLong" xml:space="preserve">
    <value>Title is too long.</value>
  </data>
  <data name="UserManager" xml:space="preserve">
    <value>User Manager</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="UsernameFieldCannotBeEmpty" xml:space="preserve">
    <value>User name is required.</value>
  </data>
  <data name="UsernameIsTooLong" xml:space="preserve">
    <value>User name is too long.</value>
  </data>
  <data name="ManageAccount" xml:space="preserve">
    <value>Manage Account</value>
  </data>
  <data name="AddNewArticle" xml:space="preserve">
    <value>Add a new creative</value>
  </data>
  <data name="EditArticle" xml:space="preserve">
    <value>Edit Creative</value>
  </data>
  <data name="ItemsCount" xml:space="preserve">
    <value>items</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Author:</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Items:</value>
  </data>
  <data name="NoArticlesFound" xml:space="preserve">
    <value>No articles found.</value>
  </data>
  <data name="TaggedArticles" xml:space="preserve">
    <value>Creatives tagged</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="TagsNone" xml:space="preserve">
    <value>none</value>
  </data>
  <data name="NoItemsFound" xml:space="preserve">
    <value>No items found.</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="AddToAdmins" xml:space="preserve">
    <value>Add to the Administrators</value>
  </data>
  <data name="AdminRole" xml:space="preserve">
    <value>Administrator</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditUserInfo" xml:space="preserve">
    <value>Edit User Info</value>
  </data>
  <data name="ExcludeFromAdmins" xml:space="preserve">
    <value>Exclude from the Administrators</value>
  </data>
  <data name="PasswordReset" xml:space="preserve">
    <value>Reset Password</value>
  </data>
  <data name="PasswordResetMsg" xml:space="preserve">
    <value>Reset Password</value>
  </data>
  <data name="ResetFailure" xml:space="preserve">
    <value>Password Reset Failure</value>
  </data>
  <data name="ResetFailureMsg" xml:space="preserve">
    <value>There was a problem resetting your password. Please try again.</value>
  </data>
  <data name="ResetMsg" xml:space="preserve">
    <value>To reset your password click on this link</value>
  </data>
  <data name="ResetSuccess" xml:space="preserve">
    <value>Password Reset Success</value>
  </data>
  <data name="ResetSuccessMsg" xml:space="preserve">
    <value>Your password has been reset. Please login using the new password.</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="UserRole" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="UnableToSaveChanges" xml:space="preserve">
    <value>Unable to save changes. Try again, and if the problem persists, see your system administrator.</value>
  </data>
  <data name="LoginPassIncorrect" xml:space="preserve">
    <value>The user name or password provided is incorrect.</value>
  </data>
  <data name="PasswordInvalid" xml:space="preserve">
    <value>The current password is incorrect or the new password is invalid.</value>
  </data>
  <data name="ActivityDiagram" xml:space="preserve">
    <value>Activity Diagram</value>
  </data>
  <data name="EditItem" xml:space="preserve">
    <value>Edit Item</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="DeleteThis" xml:space="preserve">
    <value>Delete this?</value>
  </data>
  <data name="PasswordHasBeenReset" xml:space="preserve">
    <value>Password has been reset.</value>
  </data>
  <data name="PopularArticles" xml:space="preserve">
    <value>Popular Articles</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>Preview</value>
  </data>
</root>